<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js"></script>
    <!--ariel ws-->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.4.1/socket.io.min.js"></script>
    <!-- <script src="../index.js"></script> -->
    <script>

        const socket = io('http://localhost:5000')

        socket.on('connection')


        // function requestCall() {
        //     socket.emit('getcall');
        // }
        
    //    function getData() {
    //     socket.on('newdataa', (data) => {
           
    //         for (let i = 0; i <data.min.length; i++) {
    //             x.push(data.min[i])
    //             y.push(data.waiting[i])
    //         }
    //     //}
    //         document.querySelector('h1').innerHTML = x[0]
    //     })
    // }  
        function sendMessage() {
            const date = Date.now();
            var totalWaiting = {};
            totalWaiting.Date = date;
            totalWaiting.total = 5;
            socket.emit("newdata", {totalWaiting});
        }
        
    //     chartIt();
    //      async function chartIt() {
    //         await getData();
    //         const ctx = document.getElementById('Chart').getContext('2d');

    //         const myChart = new Chart(ctx, {
    //             type: 'bar',
    //             data: {
    //                 labels: x,
    //                 datasets: [{
    //                     label: '# of Votes',
    //                     data: y,
    //                     backgroundColor: 'rgba(255, 99, 132, 0.2)',
    //                     borderColor: 'rgba(255, 99, 132, 1)',
    //                     borderWidth: 1
    //                 }]
    //             },
    //             options: {
    //                 scales: {
    //                     y: {
    //                         beginAtZero: true
    //                     }
    //                 }
    //             }
    //         });
    //     }

    //      function getData() {
    //         socket.on('newdataa', (data) => {
    //        for (let i = 0; i <data.min.length; i++) {
    //            x.push(data.min[i])
    //            y.push(data.waiting[i])
    //        }
    //        document.querySelector('h1').innerHTML = x[0]
    //    })
    //      }


    </script>
    <!--ariel ws -->
</head>

<body>
    <h1></h1>
    <input type="button" id="Set" value="Set" onclick="sendMessage()" />
    <canvas id="myChart" width="400" height="400"></canvas>
    <!-- <canvas id="Chart" width="400" height="400"></canvas> -->
    <script>
        const x = [];
        const y = [];
        //const xlabel = [];
        socket.on('newdataa', (data) => {
            function getData() {
            // socket.on('newdataa', (data) => {
           for (let i = 0; i <data.min.length; i++) {
               x.push(data.min[i])
               y.push(data.waiting[i])
           }
           document.querySelector('h1').innerHTML = x[0]
       
         }
        })
        chartIt();
        async function chartIt() {
            await getData();
            const ctx = document.getElementById('myChart').getContext('2d');

            const myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: x,
                    datasets: [{
                        label: '# of Votes',
                        data: y,
                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                        borderColor: 'rgba(255, 99, 132, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }
        
        
        
    </script>
    <!-- <script>
        const x = [];
        chartIt();
        async function chartIt() {
            await getData();
            const ctx = document.getElementById('Chart').getContext('2d');

            const myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: x,
                    datasets: [{
                        label: '# of Votes',
                        data: [12, 19, 33, 5],
                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                        borderColor: 'rgba(255, 99, 132, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }

        function getData() {
            for (let i = 0; i < 40; i++) {
                x.push(i);
            }
        }

    </script> -->

</body>

</html>